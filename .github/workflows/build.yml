name: Build Ports

on:
  schedule:
    - cron: "0 12 1-31/2 * *"
  push:
    branches:
      - master
    paths:
      - "docker-entrypoint.py"
      - "esp32/*"
      - "esp8266/*"
      - "unix/*"
      - ".github/workflows/build.yml"
      - "actions/**/*"
  pull_request:
    paths:
      - "docker-entrypoint.py"
      - "esp32/*"
      - "esp8266/*"
      - "unix/*"
      - ".github/workflows/build.yml"
      - "actions/**/*"

jobs:
  fetch_versions:
    name: Fetch Latest Versions
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.fetch.outputs.versions }}
      micropython: ${{steps.fetch.outputs.micropython}}
      pycopy: ${{steps.fetch.outputs.pycopy}}

    steps:
      - uses: actions/checkout@v2

      - name: Fetch Recent Versions
        id: fetch
        uses: ./actions/fetch-mpversions
        with:
          token: ${{ secrets.GIT_PAT }}
          max-count: 1
          builds: "micropython|esp32,pycopy|esp32"

  build_micropython:
    name: Build MicroPython
    runs-on: ubuntu-latest
    needs: fetch_versions
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.fetch_versions.outputs.micropython) }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build ${{ matrix.name }} ${{ matrix.port }} Base
        id: build-base
        uses: whoan/docker-build-with-cache-action@master
        with:
          username: bradenm
          password: "${{ secrets.GITHUB_TOKEN }}"
          registry: docker.pkg.github.com
          image_name: ${{ matrix.name }}-${{ matrix.port }}-${{ matrix.branch }}-base
          image_tag: latest
          build_extra_args: "--compress=true --target toolkit --build-arg=REPO=${{ matrix.repo }} --build-arg=BRANCH=${{ matrix.branch }} --build-arg=IDF=${{ matrix.idf }}"
          context: .
          dockerfile: esp32/Dockerfile
          push_image_and_stages: "on:push"

      - name: Build ${{ matrix.name }} ${{ matrix.port }} ${{ matrix.branch }}
        id: micropy-build
        uses: ./actions/build-micropython
        with:
          name: ${{ matrix.name }}
          repo: ${{ matrix.repo }}
          branch: ${{ matrix.branch }}
          idf: ${{ matrix.idf }}
          port: ${{ matrix.port }}
          path: ./${{ matrix.port }}
          base_image: ${{ matrix.name }}-${{ matrix.port }}-${{ matrix.branch }}-base
          docker_registry: docker.pkg.github.com
          docker_username: ${{ secrets.REGISTRY_USERNAME }}
          docker_password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Upload Binaries
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.micropy-build.outputs.binaries }}
          path: ./${{ steps.micropy-build.outputs.binaries }}

  build_pycopy:
    name: Build Pycopy
    runs-on: ubuntu-latest
    needs: fetch_versions
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.fetch_versions.outputs.pycopy) }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build ${{ matrix.name }} ${{ matrix.port }} Base
        id: build-base
        uses: whoan/docker-build-with-cache-action@master
        with:
          username: bradenm
          password: "${{ secrets.GITHUB_TOKEN }}"
          registry: docker.pkg.github.com
          image_name: ${{ matrix.name }}-${{ matrix.port }}-${{ matrix.branch }}-base
          image_tag: latest
          build_extra_args: "--compress=true --target toolkit --build-arg=REPO=${{ matrix.repo }} --build-arg=BRANCH=${{ matrix.branch }} --build-arg=IDF=${{ matrix.idf }}"
          context: .
          dockerfile: esp32/Dockerfile
          push_image_and_stages: "on:push"

      - name: Build ${{ matrix.name }} ${{ matrix.port }} ${{ matrix.branch }}
        id: micropy-build
        uses: ./actions/build-micropython
        with:
          name: ${{ matrix.name }}
          repo: ${{ matrix.repo }}
          branch: ${{ matrix.branch }}
          idf: ${{ matrix.idf }}
          port: ${{ matrix.port }}
          path: ./${{ matrix.port }}
          base_image: ${{ matrix.name }}-${{ matrix.port }}-${{ matrix.branch }}-base
          docker_registry: docker.pkg.github.com
          docker_username: ${{ secrets.REGISTRY_USERNAME }}
          docker_password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Upload Binaries
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.micropy-build.outputs.binaries }}
          path: ./${{ steps.micropy-build.outputs.binaries }}
  # build_pycom:
  #   name: Build Pycom
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       name:
  #         [
  #           pycom-wipy,
  #           pycom-lopy,
  #           pycom-sipy,
  #           pycom-gpy,
  #           pycom-fipy,
  #           pycom-lopy4,
  #         ]
  #       repo: ["https://github.com/pycom/pycom-micropython-sigfox.git"]
  #       branch: [v1.18.3, v1.20.1.r1]
  #       idf: [master]
  #       port_root: ["."]
  #       idf_repo: ["https://github.com/pycom/pycom-esp-idf.git"]
  #       include:
  #         - name: pycom-wipy
  #           board: WIPY
  #         - name: pycom-lopy
  #           board: LOPY
  #         - name: pycom-sipy
  #           board: SIPY
  #         - name: pycom-gpy
  #           board: GPY
  #         - name: pycom-fipy
  #           board: FIPY
  #         - name: pycom-lopy4
  #           board: LOPY4
  #   steps:
  #     - uses: actions/checkout@master
  #     - uses: textbook/git-checkout-submodule-action@2.0.0
  #     - name: Build ${{ matrix.name }} ESP32 ${{ matrix.branch }}
  #       id: micropy-build
  #       uses: ./actions/build-micropython
  #       with:
  #         name: ${{ matrix.name }}
  #         repo: ${{ matrix.repo }}
  #         branch: ${{ matrix.branch }}
  #         idf: ${{ matrix.idf }}
  #         idf_repo: ${{ matrix.idf_repo }}
  #         board: ${{ matrix.board}}
  #         port_root: ${{ matrix.port_root }}
  #         path: ./esp32
  #         docker_registry: docker.pkg.github.com
  #         docker_username: ${{ secrets.REGISTRY_USERNAME }}
  #         docker_password: ${{ secrets.REGISTRY_PASSWORD }}
  #     - name: Upload Binaries
  #       uses: actions/upload-artifact@v1.0.0
  #       with:
  #         name: ${{ steps.micropy-build.outputs.binaries }}
  #         path: ./${{ steps.micropy-build.outputs.binaries }}
