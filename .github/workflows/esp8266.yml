name: Build ESP8266

on:
  push:
    branches:
      - master
    paths:
      - 'esp8266/*'
      - '.github/workflows/esp8266.yml'
  pull_request:
    paths:
      - 'esp8266/*'
      - '.github/workflows/esp8266.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        args:
          - name: micropython
            repo: micropython/micropython
            branch: v1.11
            tag: docker.pkg.github.com/bradenm/micropy-build/micropython:v1.11-esp8266
          - name: pycopy
            repo: pfalcon/pycopy
            branch: v2.11.0.10
            tag: docker.pkg.github.com/bradenm/micropy-build/pycopy:v2.11.0.10-esp8266

    steps:
      - uses: actions/checkout@master
      - uses: textbook/git-checkout-submodule-action@2.0.0
      - uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build ${{ matrix.args.name }} ESP8266
        run: docker build --build-arg REPO="https://github.com/${{ matrix.args.repo }}.git" --build-arg BRANCH="${{ matrix.args.branch }}" --tag ${{ matrix.args.tag }} ./esp8266

      - name: Copy Binaries
        run: |
          docker run --name ${{ matrix.args.name }} -i ${{ matrix.args.tag }} bash -c 'mkdir -p /artifacts/ && find /micropython/${{ matrix.args.port_path || 'ports/esp8266' }}/ -path "*.bin" -exec cp {} "$_" \;'
          docker cp ${{ matrix.args.name }}:/artifacts ./${{ matrix.args.name }}-${{ matrix.args.branch }}-esp8266
          docker rm ${{ matrix.args.name }}

      - name: Upload Binaries
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{ matrix.args.name }}-${{ matrix.args.branch }}-esp8266
          path: ./${{ matrix.args.name }}-${{ matrix.args.branch }}-esp8266

      - name: Publish Image
        if: github.ref == 'refs/heads/master'
        run: docker push ${{ matrix.args.tag }}
