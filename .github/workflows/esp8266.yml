name: Build ESP8266

on:
  push:
    branches:
      - master
    paths:
      - 'esp8266/*'
      - '.github/workflows/esp8266.yml'
  pull_request:
    paths:
      - 'esp8266/*'
      - '.github/workflows/esp8266.yml'

jobs:
  build_micropython:
    name: Build MicroPython
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name: [micropython]
        repo: ['https://github.com/micropython/micropython.git']
        branch: [v1.11, v1.10]

    steps:
      - uses: actions/checkout@master

      - name: Build ${{ matrix.name }} ESP8266 ${{ matrix.branch }}
        id: micropy-build
        uses: ./actions/build-micropython
        with:
          name: ${{ matrix.name }}
          repo: ${{ matrix.repo }}
          branch: ${{ matrix.branch }}
          path: ./esp8266
          docker_registry: docker.pkg.github.com
          docker_username: ${{ secrets.REGISTRY_USERNAME }}
          docker_password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Upload Binaries
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{ steps.micropy-build.outputs.binaries }}
          path: ./${{ steps.micropy-build.outputs.binaries }}

  build_pycopy:
    name: Build Pycopy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name: [pycopy]
        repo: ['https://github.com/pfalcon/pycopy.git']
        branch: [v2.11.0.10]

    steps:
      - uses: actions/checkout@master

      - name: Build ${{ matrix.name }} ESP8266 ${{ matrix.branch }}
        id: micropy-build
        uses: ./actions/build-micropython
        with:
          name: ${{ matrix.name }}
          repo: ${{ matrix.repo }}
          branch: ${{ matrix.branch }}
          path: ./esp8266
          docker_registry: docker.pkg.github.com
          docker_username: ${{ secrets.REGISTRY_USERNAME }}
          docker_password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Upload Binaries
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{ steps.micropy-build.outputs.binaries }}
          path: ./${{ steps.micropy-build.outputs.binaries }}
